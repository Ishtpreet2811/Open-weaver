# -*- coding: utf-8 -*-
"""Kandi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_026qZpxO7yOGkxd8_OhiVdBEOtBThsw
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load dataset
data = pd.read_csv('/content/heart.csv')

data

data.columns

data['Sex'] = data['Sex'].map({'F': 0, 'M': 1})

data.ChestPainType.value_counts()

data['ChestPainType'] = data['ChestPainType'].map({'ASY': 0, 'NAP': 1,'ATA':2,'TA':3})

data.RestingECG.value_counts()

data['RestingECG'] = data['RestingECG'].map({'Normal': 0, 'LVH ': 1,'ST':2})

data['ExerciseAngina'] = data['ExerciseAngina'].map({'N': 0, 'Y': 1})

data.ST_Slope.value_counts()

data['ST_Slope'] = data['ST_Slope'].map({'Flat ': 0, 'Up': 1,'Down':2})

data = data.fillna(0)

data.fillna(0)

# Split features and target variable
X = data.drop('HeartDisease', axis=1)
y = data['HeartDisease']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the decision tree classifier
classifier = DecisionTreeClassifier()

# Train the model
classifier.fit(X_train, y_train)

# Make predictions on the test set
predictions = classifier.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, predictions)
print('Accuracy:', accuracy)